/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Locadora.View;

import Locadora.Model.Carro;
import Locadora.Model.Fabricante;
import Locadora.Model.Modelo;
import Locadora.Repository.CarroRepository;
import Locadora.Services.FabricanteServices;
import Locadora.Services.ModeloServices;
import java.awt.Color;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Rodrigo Ortolani
 */
public class CadastarCarro extends javax.swing.JFrame {

        private Map<String, Long> idFabricantesMap;
private Map<String, Long> idModelosMap;

    private List<String> nomesFabricantes;
    private List<String> nomesModelos; // Lista de nomes de modelos
    private Iterable<Modelo> modelos;
  
    
private void adicionarNomesFabricantes() {
    DefaultListModel<String> model = new DefaultListModel<>();
    for (String fabricante : nomesFabricantes) {
        model.addElement(fabricante);
    }
    LISTADEFABRICANTE.setModel(model);
}
 public CadastarCarro(List<String> nomesFabricantes, List<String> nomesModelos) {
    this.nomesFabricantes = nomesFabricantes;
    this.nomesModelos = nomesModelos;
    initComponents();
    adicionarNomesFabricantes();
    adicionarNomesModelos();
}


private void adicionarNomesModelos() {
    // Inicialize o mapa
    idModelosMap = new HashMap<>();
    DefaultListModel<String> model = new DefaultListModel<>();

    // Verifique se a lista de modelos não está vazia
    if (modelos != null) {
        // Adicione os nomes dos modelos ao modelo de lista e ao mapa
        for (Modelo modelo : modelos) {
            String nomeModelo = modelo.getNome();
            model.addElement(nomeModelo);
            idModelosMap.put(nomeModelo, modelo.getId());
        }
    }

    // Define o modelo na lista gráfica
    LISTADEMODELO.setModel(model);
}

   
private void adicionarOuvinteFabricante() {
    LISTADEFABRICANTE.addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                int selectedIndex = LISTADEFABRICANTE.getSelectedIndex();
                if (selectedIndex != -1) {
                    // Obtenha o ID do fabricante selecionado
                    String fabricanteSelecionado = nomesFabricantes.get(selectedIndex);
                    Long fabricanteId = idFabricantesMap.get(fabricanteSelecionado);
                    // Chame o método BTNCADASTRARCARROActionPerformed() com o ID do fabricante
                    
                }
            }
        }
    });
}


// Adicione este método para adicionar o ouvinte ao componente de seleção de modelo
private void adicionarOuvinteModelo() {
    LISTADEMODELO.addListSelectionListener(new ListSelectionListener() {
        @Override
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                int selectedIndex = LISTADEMODELO.getSelectedIndex();
                if (selectedIndex != -1) {
                    // Obtenha o ID do modelo selecionado
                    Long modeloId = idModelosMap.get(nomesModelos.get(selectedIndex));
                    // Chame o método BTNCADASTRARCARROActionPerformed() com o ID do modelo
                    
                }
            }
        }
    });
}

// No método initComponents(), chame os métodos de adicionar ouvintes para os componentes




    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        LISTADEFABRICANTE = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        LISTADEMODELO = new javax.swing.JList<>();
        DIGITEAPLACA = new javax.swing.JTextField();
        DIGITEOANO = new javax.swing.JTextField();
        DIGITEACOR = new javax.swing.JTextField();
        VALORLOCACAO = new javax.swing.JTextField();
        CHECKDISPONIVEL = new javax.swing.JCheckBox();
        NAODISPONIVEL = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        BTNCADASTRARCARRO = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LISTADEFABRICANTE.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(LISTADEFABRICANTE);

        LISTADEMODELO.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(LISTADEMODELO);

        DIGITEOANO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DIGITEOANOActionPerformed(evt);
            }
        });

        VALORLOCACAO.setText("R$ ");
        VALORLOCACAO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VALORLOCACAOActionPerformed(evt);
            }
        });

        CHECKDISPONIVEL.setText("Disponível");
        CHECKDISPONIVEL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CHECKDISPONIVELActionPerformed(evt);
            }
        });

        NAODISPONIVEL.setText("Carro locado");

        jLabel1.setText("Ano do veículo:");

        jLabel2.setText("Cor do veículo:");

        jLabel3.setText("Placa do veículo:");

        jLabel4.setText("Valor da locação:");

        BTNCADASTRARCARRO.setText("Cadastrar Veículo");
        BTNCADASTRARCARRO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNCADASTRARCARROActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(152, 152, 152)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(104, 104, 104)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VALORLOCACAO, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DIGITEAPLACA, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DIGITEOANO, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DIGITEACOR, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NAODISPONIVEL)
                            .addComponent(CHECKDISPONIVEL, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BTNCADASTRARCARRO))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DIGITEOANO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DIGITEACOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DIGITEAPLACA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(VALORLOCACAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(CHECKDISPONIVEL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NAODISPONIVEL)
                .addGap(18, 18, 18)
                .addComponent(BTNCADASTRARCARRO)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    
    
    
    
    private void DIGITEOANOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DIGITEOANOActionPerformed
        
    }//GEN-LAST:event_DIGITEOANOActionPerformed

    private void CHECKDISPONIVELActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CHECKDISPONIVELActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CHECKDISPONIVELActionPerformed

    private void VALORLOCACAOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VALORLOCACAOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_VALORLOCACAOActionPerformed

    private void BTNCADASTRARCARROActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNCADASTRARCARROActionPerformed
         
    // Adicione aqui o código que você precisa executar com o ID do fabricante
    
    
    String anoCarro = DIGITEOANO.getText();
    String corCarro = DIGITEACOR.getText();
    String placaCarro = DIGITEAPLACA.getText();
    String valorCarro = VALORLOCACAO.getText();
    Boolean disponivelCarro = CHECKDISPONIVEL.isSelected();

    // Verifique se os campos obrigatórios estão preenchidos
    if (anoCarro.isEmpty() || corCarro.isEmpty() || placaCarro.isEmpty() || valorCarro.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos obrigatórios.", "Erro", JOptionPane.ERROR_MESSAGE);
        return; // Impede o salvamento do carro se algum campo estiver vazio
    }

    // Verifique se algum fabricante e modelo foram selecionados
    int selectedIndexFabricante = LISTADEFABRICANTE.getSelectedIndex();
    int selectedIndexModelo = LISTADEMODELO.getSelectedIndex();
    if (selectedIndexFabricante == -1 || selectedIndexModelo == -1) {
        JOptionPane.showMessageDialog(this, "Por favor, selecione um fabricante e um modelo antes de cadastrar o carro.", "Erro", JOptionPane.ERROR_MESSAGE);
        return; // Impede o salvamento do carro se nenhum fabricante ou modelo for selecionado
    }

    // Obtenha o fabricante selecionado
    String fabricanteSelecionado = nomesFabricantes.get(selectedIndexFabricante);
    // Obtenha o ID do fabricante selecionado
    Long fabricanteId = Long.parseLong(fabricanteSelecionado);

    // Obtenha o modelo selecionado
    String modeloSelecionado = nomesModelos.get(selectedIndexModelo);
    // Obtenha o ID do modelo selecionado
    Long modeloId = Long.parseLong(modeloSelecionado);

    int ano = Integer.parseInt(anoCarro);
    double valor = Double.parseDouble(valorCarro);

    Carro carro = new Carro(0L, fabricanteId, modeloId, placaCarro, corCarro, disponivelCarro, ano, valor);

    // Salve o carro usando o repositório de carro
    CarroRepository carroRepository = new CarroRepository();
    carroRepository.salvar(carro);
    
    
    
    }//GEN-LAST:event_BTNCADASTRARCARROActionPerformed

    
    


    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
   
   List<String> nomesFabricantes = new FabricanteServices().obterNomesFabricantes();

    // Consulte os modelos do banco de dados
    List<Modelo> modelos = new ModeloServices().consultarTodosmodelos();

    // Crie uma lista de nomes de modelos a partir dos modelos consultados
    List<String> nomesModelos = new ArrayList<>();
    for (Modelo modelo : modelos) {
        nomesModelos.add(modelo.getNome());
    }

    // Agora, crie a janela CadastarCarro e passe as duas listas
    CadastarCarro cadastarCarro = new CadastarCarro(nomesFabricantes, nomesModelos);

    // Torne a janela visível
    cadastarCarro.setVisible(true);
}












// Create and display the form
    

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNCADASTRARCARRO;
    private javax.swing.JCheckBox CHECKDISPONIVEL;
    private javax.swing.JTextField DIGITEACOR;
    private javax.swing.JTextField DIGITEAPLACA;
    private javax.swing.JTextField DIGITEOANO;
    private javax.swing.JList<String> LISTADEFABRICANTE;
    private javax.swing.JList<String> LISTADEMODELO;
    private javax.swing.JCheckBox NAODISPONIVEL;
    private javax.swing.JTextField VALORLOCACAO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
        
   
